{"ast":null,"code":"var _jsxFileName = \"/home/goku/Desktop/iiit/ssad/assignment-2/mern-stack-boilerplate/frontend/src/components/Customer/show-products.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Card, CardHeader, Button } from 'reactstrap';\nexport default class ProductList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/product/view').then(response => {\n      this.setState({\n        products: response.data\n      });\n      console.log();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Search\",\n      value: this.state.email,\n      onChange: this.onChangeEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(Button, {\n      color: \"success\",\n      className: \"form-control\",\n      value: currentUser.name,\n      onClick: this.order,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Submit Order\"), this.state.products.map((currentUser, i) => {\n      if (currentUser.status !== 'deleted') {\n        return React.createElement(Card, {\n          className: \"p-3 text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          className: \"blockquote mb-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, currentUser.name, \" x\", currentUser.quantity), React.createElement(CardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Price per unit: \", currentUser.price, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }), \"Status: \", currentUser.status, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }), \"Vendor: \", currentUser.owner, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), \"Orders: \", currentUser.ordered));\n      } else {\n        return React.createElement(Card, {\n          className: \"p-3 text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          className: \"blockquote mb-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, currentUser.name, \" x\", currentUser.quantity), React.createElement(CardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Price per unit: \", currentUser.price, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), \"Status: Cancelled\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }), \"Vendor: \", currentUser.owner, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }), \"Orders: \", currentUser.ordered));\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/goku/Desktop/iiit/ssad/assignment-2/mern-stack-boilerplate/frontend/src/components/Customer/show-products.component.js"],"names":["React","Component","axios","Card","CardHeader","Button","ProductList","constructor","props","state","products","componentDidMount","get","then","response","setState","data","console","log","catch","error","render","email","onChangeEmail","currentUser","name","order","map","i","status","quantity","price","owner","ordered"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport {\n    Card,  CardHeader, Button \n  } from 'reactstrap';\n\nexport default class ProductList extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {products: []}\n\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/product/view')\n             .then(response => {\n                 this.setState({products: response.data});\n                 console.log()\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div class=\"col-lg\">\n                    <input type = \"text\"\n                    className = \"form-control\"\n                    placeholder=\"Search\"\n                    value = { this.state.email }\n                    onChange = { this.onChangeEmail }\n                    />\n                </div>\n                <Button color=\"success\" className=\"form-control\" value={currentUser.name} onClick={this.order}>Submit Order</Button>\n                { \n                this.state.products.map((currentUser, i) => {\n                    if(currentUser.status!=='deleted'){\n                        return (\n                        <Card className=\"p-3 text-center\">\n                                <CardHeader className=\"blockquote mb-0\">{currentUser.name} x{currentUser.quantity}</CardHeader>\n                                <CardHeader>Price per unit: {currentUser.price}\n                                <br/>Status: {currentUser.status}\n                                <br />Vendor: {currentUser.owner}\n                                <br />Orders: {currentUser.ordered}\n                                </CardHeader>\n                            </Card>\n                        )\n                    }\n                    else{\n                        return (\n                            <Card className=\"p-3 text-center\">\n                                    <CardHeader className=\"blockquote mb-0\">{currentUser.name} x{currentUser.quantity}</CardHeader>\n                                    <CardHeader>Price per unit: {currentUser.price}\n                                    <br/>Status: Cancelled\n                                    <br />Vendor: {currentUser.owner}\n                                    <br />Orders: {currentUser.ordered}\n                                    </CardHeader>\n                                </Card>\n                            )\n                    }\n                })\n                }\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}