{"ast":null,"code":"var _jsxFileName = \"/home/goku/Desktop/iiit/ssad/assignment-2/mern-stack-boilerplate/frontend/src/components/Customer/place-order.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Card, CardHeader, Button, UncontrolledCollapse } from 'reactstrap';\nexport default class PlaceOrder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n      quantity: '',\n      order: '',\n      customer: '',\n      status: ''\n    };\n    this.order = this.order.bind(this);\n    this.onchangeQuantity = this.onchangeQuantity.bind(this);\n    this.onchangeName = this.onchangeName.bind(this);\n  }\n\n  onchangeQuantity(event) {\n    this.setState({\n      quantity: event.target.value\n    });\n  }\n\n  onchangeName(event) {\n    this.setState({\n      order: event.target.value\n    });\n  }\n\n  order(event) {\n    if (this.state.quantity === '' || this.state.quantity < 0) {\n      alert('Enter the required Quantity');\n    } else {\n      const newOrder = {\n        quantity: this.state.quantity,\n        order: this.state.order,\n        customer: localStorage.getItem('user'),\n        status: \"waiting\"\n      };\n      this.setState({\n        quantity: ''\n      });\n      axios.post('http://localhost:4000/order/add', newOrder).then(function (res) {\n        if (res.data['User'] === 'invalid') {\n          alert('Invalid Number Entered');\n        } else {\n          axios.post('http://localhost:4000/order/add', newOrder).then();\n          window.location.reload(false);\n        }\n      });\n    }\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/product/view').then(response => {\n      this.setState({\n        products: response.data\n      });\n      console.log();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.products.map((currentUser, i) => {\n      if (currentUser.status !== 'deleted') {\n        return React.createElement(Card, {\n          className: \"p-3 text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(CardHeader, {\n          className: \"blockquote mb-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, currentUser.name, \" x\", currentUser.quantity), React.createElement(CardHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Price per unit: \", currentUser.price, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }), \"Status: \", currentUser.status, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }), \"Vendor: \", currentUser.owner), React.createElement(Button, {\n          color: \"primary\",\n          id: currentUser.name,\n          onClick: this.onchangeName,\n          value: currentUser.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Place Order\"), React.createElement(UncontrolledCollapse, {\n          toggler: currentUser.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          className: \"form-control text-center\",\n          placeholder: \"Enter Quantity Required\",\n          onChange: this.onchangeQuantity,\n          value: this.state.quantity,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }), React.createElement(Button, {\n          color: \"success\",\n          className: \"form-control\",\n          value: currentUser.name,\n          onClick: this.order,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Submit Order\")));\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/goku/Desktop/iiit/ssad/assignment-2/mern-stack-boilerplate/frontend/src/components/Customer/place-order.component.js"],"names":["React","Component","axios","Card","CardHeader","Button","UncontrolledCollapse","PlaceOrder","constructor","props","state","products","quantity","order","customer","status","bind","onchangeQuantity","onchangeName","event","setState","target","value","alert","newOrder","localStorage","getItem","post","then","res","data","window","location","reload","componentDidMount","get","response","console","log","catch","error","render","map","currentUser","i","name","price","owner"],"mappings":"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","sourcesContent":["import React, {Component } from 'react';\nimport axios from 'axios';\nimport {\n    Card, CardHeader ,Button , UncontrolledCollapse\n  } from 'reactstrap';\nexport default class PlaceOrder extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            products: [],\n            quantity: '',\n            order: '',\n            customer:'',\n            status:''\n        }\n        this.order = this.order.bind(this);\n        this.onchangeQuantity = this.onchangeQuantity.bind(this);\n        this.onchangeName = this.onchangeName.bind(this);\n    }\n    \n    onchangeQuantity(event){\n        this.setState({quantity: event.target.value})\n    }\n    onchangeName(event){\n        this.setState({order:event.target.value})\n    }\n\n    order(event){\n        if(this.state.quantity==='' || this.state.quantity<0){\n            alert('Enter the required Quantity');\n        }\n        else{\n            const newOrder = {\n                quantity: this.state.quantity,\n                order: this.state.order,\n                customer: localStorage.getItem('user'),\n                status:\"waiting\"\n            }\n            this.setState({\n                quantity: '',\n            });\n            axios.post('http://localhost:4000/order/add',newOrder)\n            .then(function(res){\n                if(res.data['User']==='invalid'){\n                    alert('Invalid Number Entered');\n                }\n                else{\n                    axios.post('http://localhost:4000/order/add',newOrder)\n                    .then()\n                    window.location.reload(false);\n                }\n            });\n        }\n    }\n    componentDidMount() {\n        axios.get('http://localhost:4000/product/view')\n             .then(response => {\n                 this.setState({products: response.data});\n                 console.log()\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n    }\n    render() {\n        return (\n            <div>\n                { \n                    this.state.products.map((currentUser, i) => {\n                        if(currentUser.status!=='deleted'){\n                            return (\n                            <Card className=\"p-3 text-center\">\n                                    <CardHeader className=\"blockquote mb-0\">{currentUser.name} x{currentUser.quantity}</CardHeader>\n                                    <CardHeader>Price per unit: {currentUser.price}\n                                    <br/>Status: {currentUser.status}\n                                    <br />Vendor: {currentUser.owner}\n                                    </CardHeader>\n                                    <Button color=\"primary\" id={currentUser.name} onClick={this.onchangeName} value={currentUser.name}>Place Order</Button>\n                                    <UncontrolledCollapse toggler={currentUser.name}>\n                                    <input type = \"number\"\n                                    className = \"form-control text-center\"\n                                    placeholder=\"Enter Quantity Required\"\n                                    onChange={this.onchangeQuantity}\n                                    value={this.state.quantity}\n                                    /> \n                                    <Button color=\"success\" className=\"form-control\" value={currentUser.name} onClick={this.order}>Submit Order</Button>\n                                    </UncontrolledCollapse>\n                                </Card>\n                            )\n                        }\n                    })\n                }\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}